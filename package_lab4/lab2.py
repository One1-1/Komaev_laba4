def task2_1(a, b, c):
    # Part A; num 8
    '''
    Задание:
    Вычислить высоту треугольника, опущенную на сторону а, по
    известным значениям длин его сторон a, b, c.

    :param a: первое вводимое число
    :param b: второе вводимое число
    :param c: третье вводимое число
    :return: None
    '''
    from math import sqrt

    p = (a + b + c) / 2
    s = sqrt(p * (p - a) * (p - b) * (p - c))
    h = (2 * s) / a

    print("Высота :", "{0:.0f}".format(h))
    print("Форматирование посредством %")
    print("\tДлины сторон (%d), (%d) и (%d) = %.2f" % (a, b, c, h))
    print("Форматирование посредством format")
    print("\tДлины сторон {:.2f}, {:.2f} и {:.2f} = {:.2f}".format(a, b, c, h))
    print("Форматирование посредством f-строк")
    print(f"\tДлины сторон {a}, {b} и {c} = {h:.2f}")


def task2_2(x):
    # Part B; num 5
    '''
    Задание:
    х - четное число, и оно больше числа, образованного перестановкой в
    х двух младших разрядов целой части местами (если x = 1234, то
    получим число 1243).

    :param x: целое вводимое число
    :return isSpecial: логическое значение
    '''
    q = x // 100
    z = x % 100 // 10
    y = x % 10
    summ = q * 100 + y * 10 + z

    isSpecial = x % 2 == 0 and x > summ
    return isSpecial



def task2_3(x):
    # Part C; num 11
    '''
    Задание:
    Вычислить значения функции y = f(x) при произвольных значениях x(a и b - константы).

    :param x: x - вводимое число
    :return y: y - результат функции
    '''
    from math import sqrt
    a = 1.7
    if x <= -1:
        y = x ** 2 - a * x
    elif 4 >= x > -1:
        y = sqrt((x + 1) ** 2, 3)
    else:
        y = 1 / (x ** 2 + 2)
    return y


def task2_4(dw):
    '''
    Задание:
    Составить программу, которая печатает номера дней в месяце, если вводится
    день недели (по порядковому номеру). Считаем, что 1-е число месяца -
    понедельник, в месяце 31 день. Выводить на экран словесное описание дня
    недели и соответствующие числа месяца (например, вводится число 2, на
    экране появляется: «Вторник - 2, 9, 16, 23, 30»).

    :param dw:
    :return: None
    '''
    if (dw <= 31) and (dw > 0):
        match dw % 7:
            case 1:
                print("Понедельник - 1, 8, 15, 22, 29")
            case 2:
                print("Вторник - 2, 9, 16, 23, 30")
            case 3:
                print("Среда - 3, 10, 17, 24, 31")
            case 4:
                print("Четверг - 4, 11, 18, 25")
            case 5:
                print("Пятница - 5, 12, 19, 26")
            case 6:
                print("Суббота - 6, 13, 20, 27")
            case 0:
                print("Воскресенье - 7, 14, 21, 28")
    else:
        print("Не существует день недели с таким порядковым номером")